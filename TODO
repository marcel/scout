- If you continue to use XmlSimple for sub objects, swap in FasterXmlSimple if
  you can get it to be compatible
  
- Finish specifying all support filters and sub-resources for each resource

- Create tables to track the most recent updated_at for various records in the DB 
so it's easy to know what's changed since the last time an import was done

- NB: The league resource has a 'league_update_timestamp'. Don't yet know if that applies to only
changes to the league itself or any changes made by teams in the league but if the latter then
it would make it very efficient to know whether to poll for changes.

- NB: In the league scoreboard sub-resource each team element includes 'team_projected_points' as well as
'team_points'.

- NB: League + standings has <points_for>276.93</points_for> and <points_against>198.47</points_against> per team.

- Player points can be gotten through the league's players sub-resource:
Scout::Resource.league + 'players' + {:players_key=>Scout::Cache::Player.find_by_full_name('Santana Moss').yahoo_key} + 'stats' + {:type => 'week', :week => 1}

- Import fantasy_football_nerd_id for defensive teams in Cache::Player